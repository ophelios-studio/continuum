{layout ../../layouts/main.latte}

{varType Models\Legal\Entities\LegalCase $case}
{varType Models\Legal\Entities\Evidence $evidence}
{varType int $revision_id}
{varType int $chain_id}
{varType string $evidence_registry_addr}

{block content}
    <div class="page-header d-print-none">
        <div class="row g-2 align-items-center">
            <div class="col">
                <div class="mb-1">
                    <ol class="breadcrumb" aria-label="breadcrumbs">
                        <li class="breadcrumb-item">
                            <a href="/cases">Cases</a>
                        </li>
                        <li class="breadcrumb-item">
                            <a href="/cases/{$case->id}">{$case->ref_code}</a>
                        </li>
                        <li class="breadcrumb-item" aria-current="page">
                            <a href="/cases/{$case->id}/evidences/{$evidence->id}">{$evidence->id}</a>
                        </li>
                    </ol>
                </div>
                <div class="d-flex align-items-center gap-2">

                    <div>
                        <h2 class="page-title mb-0">Upload encrypted file</h2>
                    </div>
                </div>
            </div>
            <div class="col-auto ms-auto d-print-none">
                <a class="btn" href="/cases/{$case->id}/evidences/{$evidence->id}">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-1">
                        <path d="M15 6l-6 6l6 6"></path>
                    </svg>
                    Back to evidence</a>
            </div>
        </div>
    </div>

    <div class="page-body">
        <div class="row row-deck row-cards">
            <div class="col-12 col-lg-8">
                <div class="card">
                    <div class="card-body">
                        <h3>Upload a secure file</h3>
                        <p class="text-muted">Choose a file on your device you wish to attach to the evidence {$evidence->id}. The file will be encrypted <strong>locally</strong> in your browser (AES-GCM) and uploaded as ciphertext.</p>
                        <div class="mb-3">
                            <label class="form-label required">File</label>
                            <input type="file" class="form-control" id="encFile" required>
                        </div>
                        <div class="mb-4 text-secondary">
                            <div class="mb-2"><div><b>EvidenceId</b></div><code class="text-truncate d-inline-block" style="max-width:100%;">{$evidence->evidence_id_hex}</code></div>
                            <div><div><b>Registry Address</b></div><code class="text-truncate d-inline-block" style="max-width:100%;">{$evidence_registry_addr}</code></div>
                        </div>

                        <div class="alert alert-info">
                            <div class="d-flex">
                                <div>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="icon alert-icon" width="24" height="24" viewBox="0 0 24 24" stroke="currentColor" fill="none"><path stroke="none" d="M0 0h24v24H0z"/><path d="M12 9v2m0 4v.01"/><path d="M5.07 19h13.86A2.07 2.07 0 0 0 21 16.93L13.93 5.07a2.07 2.07 0 0 0-3.86 0L3 16.93A2.07 2.07 0 0 0 5.07 19z"/></svg>
                                </div>
                                <div>
                                    <h4 class="alert-title">Dynamic, contract-based access</h4>
                                    <div class="text-secondary">
                                        Decryption requires that <code>EvidenceRegistry.currentCustodian(evidenceId)</code> equals the requesterâ€™s wallet at the time of decryption. If custody changes on-chain, access updates automatically.
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="alert alert-secondary">
                            <div class="d-flex">
                                <div>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="icon alert-icon" width="24" height="24" viewBox="0 0 24 24" stroke="currentColor" fill="none"><path stroke="none" d="M0 0h24v24H0z"/><path d="M12 9v2m0 4v.01"/><path d="M5.07 19h13.86A2.07 2.07 0 0 0 21 16.93L13.93 5.07a2.07 2.07 0 0 0-3.86 0L3 16.93A2.07 2.07 0 0 0 5.07 19z"/></svg>
                                </div>
                                <div>
                                    <h4 class="alert-title">Privacy reminder</h4>
                                    <div class="text-secondary">
                                        We store only <strong>ciphertext</strong> on IPFS (via Lighthouse). The decryption key is wrapped by Lit and released only if the on-chain rule passes.
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div id="status" class="small text-muted"></div>
                    </div>
                    <div class="card-footer d-flex">
                        <button id="btnUploadEnc" class="btn btn-primary ms-auto">
                            Encrypt & Upload
                        </button>
                    </div>
                    <input type="hidden" id="dataUploadUrl" value="/cases/{$case->id}/evidences/{$evidence->id}/files">
                    <input type="hidden" id="dataRedirectUrl" value="/cases/{$case->id}/evidences/{$evidence->id}">
                    <input type="hidden" id="dataEvidenceIdHex" value="{$evidence->evidence_id_hex}">
                    <input type="hidden" id="dataRegistry" value="{$evidence_registry_addr}">
                    <input type="hidden" id="dataChainId" value="{$chain_id}">
                </div>
            </div>

            <div class="col-12 col-lg-4">
                <div class="card card-borderless">
                    <div class="card-status-top bg-teal"></div>
                    <div class="card-body">
                        <h3 class="card-title">How it works</h3>
                        <ol class="text-secondary">
                            <li>Your wallet signs a short Lit auth message.</li>
                            <li>The file is encrypted locally (AES-GCM).</li>
                            <li>The symmetric key is wrapped by Lit using an on-chain check: <code>currentCustodian(evidenceId) == :userAddress</code>.</li>
                            <li>We upload ciphertext to Lighthouse/IPFS and save the Lit key capsule + rules.</li>
                        </ol>
                    </div>
                </div>
            </div>

        </div>
    </div>


    <script type="module" nonce="{nonce()}" n:syntax="off">
        import { encrypt } from '/javascripts/modules/litEncrypt.js';

        const fileInput = document.getElementById('encFile');
        const btn = document.getElementById('btnUploadEnc');
        const statusEl = document.getElementById('status');
        const redirectUrl = document.getElementById('dataRedirectUrl').value;
        const uploadUrl  = document.getElementById('dataUploadUrl').value;
        const evidenceIdHex = document.getElementById('dataEvidenceIdHex').value;
        const registry   = document.getElementById('dataRegistry').value;

        const setStatus = (m) => { statusEl.textContent = m || ''; };

        btn?.addEventListener('click', async () => {
            if (!fileInput?.files?.length) return alert('Pick a file first');

            btn.disabled = true;
            setStatus('Encrypting...');

            try {
                const res = await encrypt({
                    file: fileInput.files[0],
                    registry,
                    evidenceIdHex,
                    uploadUrl,
                    chain: 'sepolia'
                });
                setStatus('Upload complete');
                console.log('Uploaded:', res);
                setTimeout(() => window.location.url = redirectUrl, 1000);
            } catch (e) {
                console.error(e);
                setStatus(e?.message || 'Upload failed');
                btn.disabled = false;
            }
        });
    </script>
{/block}